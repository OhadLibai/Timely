# frontend/nginx.conf - SANITIZED for API Gateway Architecture

server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    
    # Root directory for React app
    root /usr/share/nginx/html;
    index index.html;
    
    # ========================================================================
    # COMPRESSION & CACHING
    # ========================================================================
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================
    
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    
    # ========================================================================
    # API PROXY (Single Gateway - All requests go through backend)
    # ========================================================================
    
    # All API requests proxied to backend (which handles ML service communication)
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increased timeouts for ML operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Buffer settings for large ML responses
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # ========================================================================
    # HEALTH CHECK & MONITORING
    # ========================================================================
    
    # Nginx health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Backend health check proxy
    location /api/health {
        proxy_pass http://backend:5000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # ========================================================================
    # REACT APP - SINGLE PAGE APPLICATION
    # ========================================================================
    
    # React Router - catch all routes and serve index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # ========================================================================
    # ERROR HANDLING
    # ========================================================================
    
    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # ========================================================================
    # REMOVED CONFIGURATIONS:
    # 
    # - Direct ML API proxy (/ml-api) - All ML requests now go through backend
    # - File upload size limits - No file uploads in sanitized version
    # - WebSocket configurations - Not needed for current demo
    # - Complex routing rules - Simplified for demo app
    # - Rate limiting - Handled by backend instead
    # - SSL/HTTPS configurations - Development focus
    # 
    # SIMPLIFIED ARCHITECTURE:
    # Frontend → Backend (API Gateway) → ML Service
    # All communication flows through the backend for clean separation
    # ========================================================================
}