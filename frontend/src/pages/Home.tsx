// frontend/src/pages/Home.tsx
// UPDATED: Replaced custom AI basket button with proper AutoGenerateBasket component
// PHASE 1: AutoGenerateBasket Integration Fix
// FIXED: Replaced hardcoded hero section with the reusable Hero component

import React from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { useAuthStore } from '@/stores/auth.store';
import {
  TrendingUp, Clock,
  Package, Shield, Sparkles, Brain
} from 'lucide-react';
import { ResponsiveGrid } from '@/components/layout/ResponsiveGrid';
// ✅ ADDED: Import AutoGenerateBasket component
import AutoGenerateBasket from '@/components/predictions/AutoGeneratedBasket';
// ✅ ADDED: Import the Hero component
import Hero from '@/components/home/Hero';

const Home: React.FC = () => {
  const navigate = useNavigate();
  const { isAuthenticated, user } = useAuthStore();

  const features = [
    {
      icon: Brain,
      title: 'AI-Powered Predictions',
      description: 'Top model accuracy',
      color: 'from-purple-500 to-indigo-600'
    },
    {
      icon: Clock,
      title: 'Save Time Shopping',
      description: 'Auto-generate your weekly basket in seconds',
      color: 'from-blue-500 to-cyan-600'
    },
    {
      icon: TrendingUp,
      title: 'Smart Recommendations',
      description: 'Personalized suggestions based on your orders',
      color: 'from-green-500 to-emerald-600'
    },
    {
      icon: Shield,
      title: 'Secure & Private',
      description: 'Your shopping data is always protected',
      color: 'from-orange-500 to-red-600'
    }
  ];

  const stats = [
    { label: 'Active Users', value: '10K+', icon: Package },
    { label: 'Predictions Made', value: '100K+', icon: Brain },
    { label: 'Time Saved', value: '1000+ hrs', icon: Clock },
    { label: 'Accuracy Rate', value: '100%', icon: TrendingUp }
  ];

  // ✅ ADDED: Handle navigation for AutoGenerateBasket component
  const handleNavigate = (path: string) => {
    navigate(path);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Hero Section */}
      <Hero />

      {/* Authenticated User Actions */}
      {isAuthenticated && (
        <section className="py-16">
          <div className="max-w-2xl mx-auto">
            <AutoGenerateBasket
              variant="card"
              onNavigate={handleNavigate}
              className="w-full"
            />
            <div className="flex justify-center gap-4 mt-6">
              <button
                onClick={() => navigate('/products')}
                className="px-12 py-5 text-lg bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                Browse Products
              </button>
              <button
                onClick={() => navigate('/orders')}
                className="px-12 py-5 text-lg bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
              >
                View Past Orders
              </button>
            </div>
          </div>
        </section>
      )}


      {/* Features Section */}
      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 }}
          >
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-4">
              Why Choose Timely?
            </h2>
            <p className="text-center text-gray-600 mb-12 max-w-2xl mx-auto">
              It is Easy. You Care About Your Time and So Do We! 
            </p>

            <ResponsiveGrid cols={{ sm: 1, md: 2, lg: 4 }} gap={8}>
              {features.map((feature, index) => (
                <motion.div
                  key={feature.title}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.1 * index }}
                  className="text-center p-6 bg-gray-50 rounded-lg hover:shadow-md transition-shadow"
                >
                  <div className="mb-4">
                    <div className={`inline-flex p-3 rounded-lg bg-gradient-to-r ${feature.color}`}>
                      <feature.icon className="w-6 h-6 text-white" />
                    </div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">
                      {feature.title}
                    </h3>
                    <p className="text-gray-600">
                      {feature.description}
                    </p>
                  </div>
                </motion.div>
              ))}
            </ResponsiveGrid>
          </motion.div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-gray-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.3 }}
          >
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-12">
              Powered by Real Data
            </h2>

            <ResponsiveGrid cols={{ sm: 2, md: 4 }} gap={8}>
              {stats.map((stat, index) => (
                <motion.div
                  key={stat.label}
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: 0.1 * index }}
                  className="text-center"
                >
                  <div className="inline-flex p-3 bg-white rounded-full shadow-md mb-4">
                    <stat.icon className="w-8 h-8 text-indigo-600" />
                  </div>
                  <div className="text-3xl font-bold text-gray-900 mb-1">
                    {stat.value}
                  </div>
                  <div className="text-gray-600">
                    {stat.label}
                  </div>
                </motion.div>
              ))}
            </ResponsiveGrid>
          </motion.div>
        </div>
      </section>

      {/* CTA Section */}
      {!isAuthenticated && (
        <section className="py-16 bg-gradient-to-r from-purple-600 to-indigo-600">
          <div className="max-w-4xl mx-auto px-4 text-center">
            <h2 className="text-3xl font-bold text-white mb-4">
              Ready to Experience AI-Powered Shopping?
            </h2>
            <p className="text-xl text-purple-100 mb-8">
              Join thousands of users who save time with smart predictions
            </p>
            <button
              onClick={() => navigate('/register')}
              className="px-8 py-4 bg-white text-purple-600 rounded-lg font-semibold text-lg hover:bg-purple-50 transition-colors"
            >
              Start Free Today
            </button>
          </div>
        </section>
      )}
    </div>
  );
};

export default Home;