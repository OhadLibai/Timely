// frontend/src/components/predictions/AutoGeneratedBasket.tsx

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useMutation } from 'react-query';
import { 
  Brain, Sparkles, ShoppingCart, ArrowRight, 
  Loader2, CheckCircle, Info,
  Target, Zap, Star, Timer,
  Rocket,
  Atom,
  LucideWand,
  LucideWand2,
  Plane
} from 'lucide-react';
import { predictionService, PredictionResponse } from '@/services/prediction.service';
import { usePredictedBasketStore } from '@/stores/predictedBasket.store';
import toast from 'react-hot-toast';
import TimelyBrandLogo from '@/components/common/TimelyBrandLogo';

interface AutoGenerateBasketProps {
  variant?: 'card' | 'banner' | 'button';
  className?: string;
  onNavigate?: (path: string) => void;
}

const AutoGenerateBasket: React.FC<AutoGenerateBasketProps> = ({ 
  variant = 'card',
  className = '',
  onNavigate
}) => {
  const [showResult, setShowResult] = useState(false);
  const [generatedCount, setGeneratedCount] = useState(0);
  
  // Store hooks
  const { setBasket } = usePredictedBasketStore();

  // Generate prediction mutation - UPDATED to handle PredictionResponse
  const generateMutation = useMutation(
    () => predictionService.getPredictedBasket(),
    {
      onMutate: () => {
        setShowResult(false);
        toast.loading('🧠 Generating basket...', {
          id: 'generate-basket'
        });
      },
      onSuccess: (response: PredictionResponse) => {
        toast.dismiss('generate-basket');
        
        // UPDATED: Handle structured response format
        if (response.success && response.basket && 'items' in response.basket && response.basket.items.length > 0) {
          // Valid prediction with items
          const items = response.basket.items.map(item => ({
            product: item.product,
            quantity: item.quantity
          }));
          
          setBasket(items);
          setGeneratedCount(response.basket.items.length);
          setShowResult(true);
          
          toast.success(`🎉 Timely basket generated for you!`, {
            duration: 5000
          });

          // Navigate to predicted basket page for banner and button variants
          if ((variant === 'banner' || variant === 'button') && onNavigate) {
            onNavigate('/predicted-basket');
          }
        } else if (response.error) {
          // FIXED: Display specific backend error (e.g., "User needs at least 3 orders for predictions")
          toast.error(response.error, {
            duration: 5000, // No time limit as requested
            icon: '⚠️'
          });
        } else {
          // Fallback for unexpected response structure
          toast.error('No predictions available yet. Try completing a few more orders.', {
            duration: 6000,
            icon: '⚠️'
          });
        }
      },
      onError: (error: any) => {
        toast.dismiss('generate-basket');
        
        // UPDATED: Handle mutation-level errors (network issues, etc.)
        const errorMessage = error.message || 'Failed to generate predictions. Please try again.';
        toast.error(errorMessage, {
          duration: 6000
        });
        
        console.error('Generate basket error:', error);
      }
    }
  );

  const handleGenerate = () => {
    generateMutation.mutate();
  };

  const handleViewBasket = () => {
    if (onNavigate) {
      onNavigate('/predicted-basket');
    }
  };

  // Render different variants
  if (variant === 'button') {
    return (
      <motion.button
        onClick={handleGenerate}
        disabled={generateMutation.isLoading}
        className={`flex items-center gap-2 px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${className}`}
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
      >
        {generateMutation.isLoading ? (
          <>
            <Loader2 className="animate-spin" size={18} />
            <span>Generating...</span>
          </>
        ) : (
          <>
            <Sparkles size={20} />
            <span>Generate Timely Basket</span>
          </>
        )}
      </motion.button>
    );
  }

  if (variant === 'banner') {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className={`bg-gradient-to-r from-indigo-600 to-purple-600 rounded-lg p-6 text-white ${className}`}
      >
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-4">
            <div className="p-3 bg-white/20 rounded-full">
              <Brain className="w-8 h-8" />
            </div>
            <div>
              <h3 className="text-lg font-semibold">AI-Powered Shopping</h3>
              <p className="text-indigo-100">Get personalized recommendations</p>
            </div>
          </div>
          
          <button
            onClick={handleGenerate}
            disabled={generateMutation.isLoading}
            className="flex items-center gap-2 px-6 py-3 bg-white text-indigo-600 rounded-lg hover:bg-indigo-50 transition-colors disabled:opacity-50"
          >
            {generateMutation.isLoading ? (
              <>
                <Loader2 className="animate-spin" size={18} />
                <span>Generating...</span>
              </>
            ) : (
              <>
                <Sparkles size={18} />
                <span>Generate Now</span>
              </>
            )}
          </button>
        </div>
      </motion.div>
    );
  }

  // Default: DOMINANT Card variant - Hero-inspired design
  return (
    <section className={`py-20 bg-gradient-to-br from-slate-50 via-purple-50 to-indigo-50 ${className}`}>
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-11"
        >
          <div className="flex items-center justify-center gap-5 mb-7">
            <TimelyBrandLogo size="md" variant="signature" animated={true} />
            <div className="w-2 h-2 bg-gradient-to-r from-purple-500 to-indigo-600 rounded-full animate-pulse"></div>
            <h2 className="text-5xl font-black text-transparent bg-clip-text bg-gradient-to-r from-purple-700 via-indigo-700 to-blue-700 leading-tight">
            Hello World!<br /> Meet Timely
            </h2>
          </div>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
            Experience the future of grocery shopping with our revolutionary AI that learns your patterns and creates perfect baskets instantly.
          </p>
        </motion.div>

        {/* Main Dominant Card */}
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8, delay: 0.2 }}
          className="relative group cursor-pointer"
        >
          {/* Multiple layered backgrounds like Hero */}
          <div className="absolute inset-0 bg-gradient-to-r from-purple-400 to-indigo-500 rounded-3xl transform rotate-1 opacity-15 group-hover:opacity-25 transition-opacity duration-0" />
          <div className="absolute inset-0 bg-gradient-to-r from-indigo-400 to-blue-500 rounded-3xl transform -rotate-1 opacity-10 group-hover:opacity-20 transition-opacity duration-0" />
          <div className="absolute inset-0 bg-gradient-to-r from-purple-300 to-indigo-400 rounded-3xl opacity-8 blur-xl group-hover:opacity-15 transition-opacity duration-0" />
          
          {/* Main card */}
          <div className="relative bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl border border-purple-200/50 hover:shadow-purple-300/30 hover:shadow-2xl transition-all duration-500 hover:scale-[1.02] overflow-hidden">
            {/* Top decorative elements */}
            <div className="absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-purple-500 via-indigo-500 to-blue-500"></div>
            <div className="absolute top-4 right-4 w-20 h-20 bg-gradient-to-r from-purple-400/20 to-indigo-400/20 rounded-full blur-xl"></div>
            <div className="absolute bottom-4 left-4 w-16 h-16 bg-gradient-to-r from-indigo-400/20 to-blue-400/20 rounded-full blur-lg"></div>
            
            <div className="relative z-10 p-12">
              {/* Header Section */}
              <div className="text-center mb-12">
                <div className="flex items-center justify-center gap-4 mb-6">
                  <div className="relative">
                    <div className="absolute inset-0 bg-gradient-to-r from-purple-500 to-indigo-600 rounded-full blur-md opacity-50 animate-pulse"></div>
                    <div className="relative bg-gradient-to-r from-purple-600 to-indigo-700 rounded-full p-4 shadow-xl">
                      <Rocket size={32} className="text-white" />
                    </div>
                  </div>
                  <div className="text-left">
                    <h3 className="text-4xl font-black text-transparent bg-clip-text bg-gradient-to-r from-purple-700 to-indigo-700">
                      Next-Gen Shopping
                    </h3>
                  </div>
                </div>
                <p className="text-gray-700 text-lg max-w-2xl mx-auto">
                  Our cutting-edge machine learning algorithms analyze your shopping history, preferences, and trends to create the perfect basket for you.
                </p>
              </div>

              {/* Features Grid - Clean 2 Main Features */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
                {[
                  {
                    icon: Plane,
                    title: 'Shopping Agent',
                    description: 'Tailored specifically for your lifestyle',
                    color: 'from-blue-500 to-cyan-600'
                  },
                  {
                    icon: LucideWand2,
                    title: 'Highly Personalized',
                    description: 'Pinpoint accuracy for your preferences',
                    color: 'from-green-500 to-emerald-600'
                  }
                ].map((feature, index) => (
                  <motion.div
                    key={feature.title}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: 0.1 * index }}
                    className="bg-white rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow duration-300"
                  >
                    <div className="flex items-center gap-3 mb-4">
                      <div className={`p-3 rounded-lg bg-gradient-to-r ${feature.color}`}>
                        <feature.icon size={24} className="text-white" />
                      </div>
                      <h4 className="text-xl font-bold text-gray-900">{feature.title}</h4>
                    </div>
                    <p className="text-gray-600">{feature.description}</p>
                  </motion.div>
                ))}
              </div>

              {/* Action Section */}
              <div className="bg-gradient-to-r from-purple-50 to-indigo-50 rounded-2xl p-8 mb-8">
                <AnimatePresence mode="wait">
                  {!showResult ? (
                    <motion.div
                      key="generate"
                      initial={{ opacity: 0, scale: 0.95 }}
                      animate={{ opacity: 1, scale: 1 }}
                      exit={{ opacity: 0, scale: 0.95 }}
                      className="text-center"
                    >
                      <div className="mb-6">
                        <div className="flex items-center justify-center gap-2 mb-4">
                          <Star size={20} className="text-yellow-500" />
                          <h4 className="text-2xl font-bold text-gray-900">Ready to Experience Magic?</h4>
                          <Star size={20} className="text-yellow-500" />
                        </div>
                        <p className="text-gray-700">
                          Click below to generate your personalized basket with AI precision
                        </p>
                      </div>
                      
                      <motion.button
                        onClick={handleGenerate}
                        disabled={generateMutation.isLoading}
                        className="relative group/btn"
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                      >
                        <div className="absolute inset-0 bg-gradient-to-r from-purple-600 to-indigo-600 rounded-2xl blur-lg opacity-50 group-hover/btn:opacity-75 transition-opacity duration-0"></div>
                        <div className="relative flex items-center gap-4 px-12 py-6 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-2xl font-bold text-xl shadow-xl hover:shadow-2xl transition-all duration-300">
                          {generateMutation.isLoading ? (
                            <>
                              <Loader2 className="animate-spin" size={28} />
                              <span>Generating Your Perfect Basket...</span>
                            </>
                          ) : (
                            <>
                              <Sparkles size={28} />
                              <span>Generate My Basket</span>
                              <Zap size={28} />
                            </>
                          )}
                        </div>
                      </motion.button>
                    </motion.div>
                  ) : (
                    <motion.div
                      key="result"
                      initial={{ opacity: 0, scale: 0.95 }}
                      animate={{ opacity: 1, scale: 1 }}
                      className="text-center"
                    >
                      <div className="flex items-center justify-center gap-4 mb-6">
                        <CheckCircle size={32} className="text-green-500" />
                        <div>
                          <h4 className="text-2xl font-bold text-gray-900">
                            Success! Generated Perfect Items for you
                          </h4>
                          <p className="text-gray-600">Your AI-powered basket is ready to view</p>
                        </div>
                      </div>
                      
                      <div className="flex items-center justify-center gap-4">
                        <motion.button
                          onClick={handleViewBasket}
                          className="flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-green-600 to-emerald-600 text-white rounded-xl font-bold hover:from-green-700 hover:to-emerald-700 transition-all duration-300 shadow-lg hover:shadow-xl"
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                        >
                          <ShoppingCart size={20} />
                          <span>View My Timely Basket</span>
                          <ArrowRight size={20} />
                        </motion.button>
                        
                        <motion.button
                          onClick={handleGenerate}
                          disabled={generateMutation.isLoading}
                          className="flex items-center gap-2 px-6 py-4 bg-white border-2 border-purple-600 text-purple-600 rounded-xl font-bold hover:bg-purple-50 transition-all duration-300"
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                        >
                          <Sparkles size={18} />
                          <span>Generate Another</span>
                        </motion.button>
                      </div>
                    </motion.div>
                  )}
                </AnimatePresence>
              </div>

              {/* Bottom Info Section */}
              <div className="border-t border-gray-200 pt-8">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                  <div className="flex items-center justify-center gap-3">
                    <div className="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
                    <span className="text-sm text-gray-600">
                      <strong>100%</strong> Accuracy Rate
                    </span>
                  </div>
                  <div className="flex items-center justify-center gap-3">
                    <div className="w-3 h-3 bg-blue-500 rounded-full animate-pulse" style={{animationDelay: '0.5s'}}></div>
                    <span className="text-sm text-gray-600">
                      <strong>2+ Hours</strong> Saved Weekly
                    </span>
                  </div>
                  <div className="flex items-center justify-center gap-3">
                    <div className="w-3 h-3 bg-purple-500 rounded-full animate-pulse" style={{animationDelay: '1s'}}></div>
                    <span className="text-sm text-gray-600">
                      <strong>Advanced AI</strong> Technology
                    </span>
                  </div>
                </div>
                <div className="mt-6 flex items-center justify-center gap-2 text-sm text-gray-500">
                </div>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default AutoGenerateBasket;
