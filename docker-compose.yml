# docker-compose.yml

services:
  database:
    build: ./database
    container_name: timely-database
    environment:
      POSTGRES_DB: timely_db
      POSTGRES_USER: timely_user
      POSTGRES_PASSWORD: timely_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dataset:/shared/dataset:ro  # Dataset shared as read-only
      - initialization_flags:/shared/flags  # Shared flag storage
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timely_user -d timely_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: timely-backend
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ml_data:/app/data
      - ./dataset:/shared/dataset:ro  # Dataset shared as read-only
      - initialization_flags:/shared/flags  # Shared flag storage
    environment:
      - PYTHONUNBUFFERED=1
      - USER_LOAD_FRACTION=0.01 # Determines how many users will be available from the dataset
      - RANDOM=0 # is the sampling of the users from the csv should be random or not (1-True, 0-False)
      - KNN_NEIGHBOR_LOADING_SAMPLE=100  # KNN search optimization, controls the real-time prediction speed
      - MAX_VECTORS=500  # Limit to avoid memory issues, managed during the build process
      - EVALUATE_AT=10  
      - PREDICTED_BASKET_SIZE=10 # TOP_K parameter
    mem_limit: 8g

  frontend:
    build: ./frontend
    container_name: timely-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - API_URL=http://localhost:5000/api
      - NODE_ENV=development

volumes:
  postgres_data:
  ml_data:
  initialization_flags:  # New shared volume for initialization flags