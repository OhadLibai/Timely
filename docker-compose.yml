# docker-compose.yml

services:
  database:
    build: ./database
    container_name: timely-database
    environment:
      POSTGRES_DB: timely_db
      POSTGRES_USER: timely_user
      POSTGRES_PASSWORD: timely_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dataset:/shared/dataset:ro  # Dataset shared as read-only
      - initialization_flags:/shared/flags  # Shared flag storage
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timely_user -d timely_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: timely-backend
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ml_data:/app/data
      - ./dataset:/shared/dataset:ro  # Dataset shared as read-only
      - initialization_flags:/shared/flags  # Shared flag storage
    environment:
      - PYTHONUNBUFFERED=1
      - USER_ORDER_LOAD_FRACTION=0.05 # Determines how many users will be available from the dataset
      - MATRIX_NEIGHBOR_KNN_SEARCH_LIMIT=2000  # KNN search optimization, controls the real-time prediction speed
      - MAX_VECTORS=2000  # Limit to avoid memory issues, managed during the build process
      - PREDICTED_BASKET_SIZE=10 # TOP_K parameter
      - EVALUATE_AT=10 # On what size of the basket we should evaluate
      - TRAIN_SPLIT=0.9 # determine the fraction of which user will be used for recommendation in pre-loading 
      - VALIDATION_SPLIT=0.05 # which fraction of the users will be used for validation
                              # the rest goes to testing.
    mem_limit: 8g

  frontend:
    build: ./frontend
    container_name: timely-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - API_URL=http://localhost:5000/api
      - NODE_ENV=development

volumes:
  postgres_data:
  ml_data:
  initialization_flags:  # New shared volume for initialization flags