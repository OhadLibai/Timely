/CSVs -> ML preprocessing -> ML training -> API usage.

Raw Data: Instacart CSVs in ml-service/training_data/.

Preprocessing (train-model service step 1): data_preprocessing.py creates features.csv, instacart_history.csv, instacart_future.csv, keyset.json in ml-service/data/processed/.

Prediction: Frontend requests -> Backend API -> ML Service API -> Uses loaded model and features (potentially app.state.features_df for demo, or live feature engineering) -> Prediction.

Admin Monitoring: Admin frontend fetches evaluation metrics from backend, which reads from model_metrics table. Prediction demo page uses dedicated backend/ML endpoints.

Personalization for new users:
Future enhancement: Record their orders and periodically re-run the data_preprocessing.py script to generate features for them.
But for the current scope, it's important to know that new users will get intelligent, popularity-based recommendations that become personalized as they use the app.